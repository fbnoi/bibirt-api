syntax = "proto3";

package api.user.v1;

import "google/api/annotations.proto";
import "validate/validate.proto";

option go_package = "bibirt-api/api/user/v1;v1";
option java_multiple_files = true;
option java_package = "api.user.v1";

service Auth {
	rpc RegisterAsAnonymous (RegisterAsAnonymousRequest) returns (RegisterAsAnonymousReply) {
		option (google.api.http) = {
			post: "/register_anonymous"
			body: "*"
		};
	};
	rpc UserInfo(UserInfoRequest) returns (UserInfoReply) {
		option (google.api.http) = {
			post: "/user_info"
			body: "*"
		};
	};
	rpc WSToken (WSTokenRequest) returns (WSTokenReply) {
		option (google.api.http) = {
			post: "/ws_token"
			body: "*"
		};
	};
	rpc RefreshToken (RefreshTokenRequest) returns (RefreshTokenReply) {
		option (google.api.http) = {
			post: "/refresh_token"
			body: "*"
		};
	};
	rpc WSUserInfo (WSUserInfoRequest) returns (WSUserInfoReply) {
		option (google.api.http) = {
			post: "/conn_uuid"
			body: "*"
		};
	};
}

message RegisterAsAnonymousRequest {}
message RegisterAsAnonymousReply {
	string token = 1;
	string refresh_token = 2;
}

message UserInfoRequest {
	string token = 1 [(validate.rules).string.min_len =  1];
}
message UserInfoReply {
	string uuid = 1;
	string name = 2;
	uint64 score = 3;
}

message WSTokenRequest {
	string token = 1 [(validate.rules).string.min_len =  1]; 
}
message WSTokenReply {
	string token = 1;
}

message RefreshTokenRequest {
	string refresh_token = 1 [(validate.rules).string.min_len =  1];
}
message RefreshTokenReply {
	string token = 1;
}

message WSUserInfoRequest {
	string token = 1 [(validate.rules).string.min_len =  1];
}
message WSUserInfoReply {
	string uuid = 1;
	string name = 2;
	uint64 score = 3;
}
